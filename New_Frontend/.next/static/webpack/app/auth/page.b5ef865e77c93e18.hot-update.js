"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/auth/page",{

/***/ "(app-pages-browser)/./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiFetch: function() { return /* binding */ apiFetch; },\n/* harmony export */   checkHealth: function() { return /* binding */ checkHealth; },\n/* harmony export */   loginCollector: function() { return /* binding */ loginCollector; }\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"(app-pages-browser)/./lib/config.ts\");\n\nasync function apiFetch(path, init) {\n    const base = (0,_config__WEBPACK_IMPORTED_MODULE_0__.getApiBase)();\n    const res = await fetch(\"\".concat(base).concat(path), {\n        ...init,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...init && init.headers ? init.headers : {}\n        },\n        cache: \"no-store\"\n    });\n    if (!res.ok) {\n        let text;\n        try {\n            text = await res.text();\n        } catch (e) {}\n        throw new Error(\"API \".concat(res.status, \": \").concat(text || res.statusText));\n    }\n    try {\n        return await res.json();\n    } catch (e) {\n        throw new Error(\"Failed to parse API response\");\n    }\n}\nasync function checkHealth() {\n    return apiFetch(\"/status\", {\n        method: \"GET\"\n    });\n}\nasync function loginCollector(body) {\n    return apiFetch(\"/api/auth/login\", {\n        method: \"POST\",\n        body: JSON.stringify(body)\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9hcGkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFzQztBQVMvQixlQUFlQyxTQUFzQkMsSUFBWSxFQUFFQyxJQUFrQjtJQUMzRSxNQUFNQyxPQUFPSixtREFBVUE7SUFDdkIsTUFBTUssTUFBTSxNQUFNQyxNQUFNLEdBQVVKLE9BQVBFLE1BQVksT0FBTEYsT0FBUTtRQUN6QyxHQUFHQyxJQUFJO1FBQ1BJLFNBQVM7WUFDUixnQkFBZ0I7WUFDaEIsR0FBSUosUUFBUUEsS0FBS0ksT0FBTyxHQUFHSixLQUFLSSxPQUFPLEdBQUcsQ0FBQyxDQUFDO1FBQzdDO1FBQ0FDLE9BQU87SUFDUjtJQUNBLElBQUksQ0FBQ0gsSUFBSUksRUFBRSxFQUFFO1FBQ1osSUFBSUM7UUFDSixJQUFJO1lBQUVBLE9BQU8sTUFBTUwsSUFBSUssSUFBSTtRQUFJLEVBQUUsVUFBTSxDQUFDO1FBQ3hDLE1BQU0sSUFBSUMsTUFBTSxPQUFzQkQsT0FBZkwsSUFBSU8sTUFBTSxFQUFDLE1BQTJCLE9BQXZCRixRQUFRTCxJQUFJUSxVQUFVO0lBQzdEO0lBQ0EsSUFBSTtRQUNILE9BQVEsTUFBTVIsSUFBSVMsSUFBSTtJQUN2QixFQUFFLE9BQU9DLEdBQUc7UUFDWCxNQUFNLElBQUlKLE1BQU07SUFDakI7QUFDRDtBQUVPLGVBQWVLO0lBQ3JCLE9BQU9mLFNBQXNCLFdBQVc7UUFBRWdCLFFBQVE7SUFBTTtBQUN6RDtBQVNPLGVBQWVDLGVBQWVDLElBQXdCO0lBQzVELE9BQU9sQixTQUFpQyxtQkFBbUI7UUFDMURnQixRQUFRO1FBQ1JFLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQ0Y7SUFDdEI7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvYXBpLnRzPzY4YTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0QXBpQmFzZSB9IGZyb20gJy4vY29uZmlnJztcblxuZXhwb3J0IGludGVyZmFjZSBBcGlSZXNwb25zZTxUID0gdW5rbm93bj4ge1xuXHRzdWNjZXNzOiBib29sZWFuO1xuXHRtZXNzYWdlPzogc3RyaW5nO1xuXHRkYXRhPzogVDtcblx0W3Rva2VuOiBzdHJpbmddOiB1bmtub3duO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYXBpRmV0Y2g8VCA9IHVua25vd24+KHBhdGg6IHN0cmluZywgaW5pdD86IFJlcXVlc3RJbml0KTogUHJvbWlzZTxUPiB7XG5cdGNvbnN0IGJhc2UgPSBnZXRBcGlCYXNlKCk7XG5cdGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke2Jhc2V9JHtwYXRofWAsIHtcblx0XHQuLi5pbml0LFxuXHRcdGhlYWRlcnM6IHtcblx0XHRcdCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG5cdFx0XHQuLi4oaW5pdCAmJiBpbml0LmhlYWRlcnMgPyBpbml0LmhlYWRlcnMgOiB7fSksXG5cdFx0fSxcblx0XHRjYWNoZTogJ25vLXN0b3JlJyxcblx0fSk7XG5cdGlmICghcmVzLm9rKSB7XG5cdFx0bGV0IHRleHQ6IHN0cmluZyB8IHVuZGVmaW5lZDtcblx0XHR0cnkgeyB0ZXh0ID0gYXdhaXQgcmVzLnRleHQoKTsgfSBjYXRjaCB7fVxuXHRcdHRocm93IG5ldyBFcnJvcihgQVBJICR7cmVzLnN0YXR1c306ICR7dGV4dCB8fCByZXMuc3RhdHVzVGV4dH1gKTtcblx0fVxuXHR0cnkge1xuXHRcdHJldHVybiAoYXdhaXQgcmVzLmpzb24oKSkgYXMgVDtcblx0fSBjYXRjaCAoZSkge1xuXHRcdHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIHBhcnNlIEFQSSByZXNwb25zZScpO1xuXHR9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjaGVja0hlYWx0aCgpIHtcblx0cmV0dXJuIGFwaUZldGNoPEFwaVJlc3BvbnNlPignL3N0YXR1cycsIHsgbWV0aG9kOiAnR0VUJyB9KTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBMb2dpbkNvbGxlY3RvckJvZHkge1xuXHRjb2xsZWN0b3JJZDogc3RyaW5nO1xuXHRwYXNzd29yZDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIExvZ2luQ29sbGVjdG9yUmVzcG9uc2UgZXh0ZW5kcyBBcGlSZXNwb25zZTx7IGNvbGxlY3RvcklkOiBzdHJpbmcgfT57fVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbG9naW5Db2xsZWN0b3IoYm9keTogTG9naW5Db2xsZWN0b3JCb2R5KSB7XG5cdHJldHVybiBhcGlGZXRjaDxMb2dpbkNvbGxlY3RvclJlc3BvbnNlPignL2FwaS9hdXRoL2xvZ2luJywge1xuXHRcdG1ldGhvZDogJ1BPU1QnLFxuXHRcdGJvZHk6IEpTT04uc3RyaW5naWZ5KGJvZHkpLFxuXHR9KTtcbn1cbiJdLCJuYW1lcyI6WyJnZXRBcGlCYXNlIiwiYXBpRmV0Y2giLCJwYXRoIiwiaW5pdCIsImJhc2UiLCJyZXMiLCJmZXRjaCIsImhlYWRlcnMiLCJjYWNoZSIsIm9rIiwidGV4dCIsIkVycm9yIiwic3RhdHVzIiwic3RhdHVzVGV4dCIsImpzb24iLCJlIiwiY2hlY2tIZWFsdGgiLCJtZXRob2QiLCJsb2dpbkNvbGxlY3RvciIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.ts\n"));

/***/ })

});